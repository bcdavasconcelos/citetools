---
title: Cite Field
---

The need to print arbitrary information from the references, such as `author`, `editor`, or `translator` names; as well as `title` or `original-title` of works.^[In fact, we can get any field from the reference, as long as it is defined in the [CSL](https://docs.citationstyles.org/en/stable/specification.html) schema. These include:
  ```
  abstract accessed annote archive archive_collection archive_location archive-place author authority available-date call-number chair chapter-number citation-key citation-label citation-number collection-editor collection-number collection-title compiler composer container-author container-title container-title-short contributor curator dimensions director division DOI edition editor editor-translator editorial-director event event-date event-place event-title executive-producer first-reference-note-number genre guest host illustrator interviewer ISBN ISSN issue issued jurisdiction keyword language license locator medium narrator note notes number number-of-pages number-of-volumes organizer original-author original-date original-publisher original-publisher-place original-title page page-first part-number part-title performer PMCID PMID printing-number producer publisher publisher-place recipient references reviewed-author reviewed-genre reviewed-title scale script-writer section series-creator source status submitted supplement-number title title-short translator URL version volume volume-title year-suffix
  ```
] To do this, we will use a small variation of Pandoc's vanilla syntax for citations.

::: {.callout-note appearance="simple"}
The syntax is `[@AristOp]{.csl_field}`, where `AristOp` is the `id` of the reference, and `csl_field` is the field we want to evoke.
:::

Let us see that in practice with the following reference:

::: {.panel-tabset collapse="true"}
## CSL-YAML
```yaml
type: book
id: AristOp
author:
- family: Aristotle
editor:
- family: Bekker
  given: Immanuel
title: Aristotelis opera
issued:
  date-parts:
  - 1831
number-of-volumes: '4'
publisher: Reimer
publisher-place: Berlim
```
::: {.callout-warning collapse="true"}
## Note about CSL-YAML
CSL-YAML is a YAML representation of the CSL schema used internally by Pandoc. This means there is strict correspondence between field names and the fields we can call upon using the `Cite Field` filter. Other formats such as BibTeX or RIS will have slighly different names, but regardless, we must use the CSL field names.
Some bibliography managers, such as Zotero with the BetterBibTeX plugin, can export CSL-YAML files. Others will have to convert their native format to CSL-YAML.
:::

## CSL-JSON
```json
{
    "author": [
      {
        "family": "Aristotle"
      }
    ],
    "editor": [
      {
        "family": "Bekker",
        "given": "Immanuel"
      }
    ],
    "id": "AristOp",
    "issued": {
      "date-parts": [
        [
          1831
        ]
      ]
    },
    "number-of-volumes": "4",
    "publisher": "Reimer",
    "publisher-place": "Berlim",
    "title": "Aristotelis opera",
    "type": "book"
  }
```
## BibTeX
```bibtex
@book{AristOp,
  author = {Aristotle},
  editor = {Bekker, Immanuel},
  title = {Aristotelis opera},
  publisher = {Reimer},
  publisher-place = {Berlim},
  number-of-volumes = {4},
  issued = {1831}
}
```
## RIS
```ris
TY  - BOOK
ID  - AristOp
AU  - Aristotle
ED  - Bekker, Immanuel
TI  - Aristotelis opera
PB  - Reimer
CY  - Berlim
VL  - 4
Y1  - 1831
ER  -
```
:::

For example, the following snippet:

> The works of `[@AristOp]{.author}` were first edited by `[@AristOp]{.editor}` in `[@AristOp]{.issued}`.

Will render as:

> The works of [@AristOp]{.author} were first edited by [@AristOp]{.editor} in [@AristOp]{.issued}.


<!-- ![](/img/2023-03-18-22-24-10.png) -->






# Primary Sources {.appendix}

::: {#refs_primary}
:::


# Secondary Sources {.appendix}

::: {#refs_secondary}
:::

