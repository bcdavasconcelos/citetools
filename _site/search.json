[
  {
    "objectID": "changelog.html",
    "href": "changelog.html",
    "title": "Cite Tools",
    "section": "",
    "text": "Released 2023-03-18."
  },
  {
    "objectID": "docs/citetools/Cite-Field/index.html",
    "href": "docs/citetools/Cite-Field/index.html",
    "title": "Cite Field",
    "section": "",
    "text": "The need to print arbitrary information from the references, such as author, editor, or translator names; as well as title or original-title of works.1 To do this, we will use a small variation of Pandoc’s vanilla syntax for citations.\n\n\n\n\n\n\nThe syntax is [@AristOp]{.csl_field}, where AristOp is the id of the reference, and csl_field is the field we want to evoke.\n\n\n\nLet us see that in practice with the following reference:\n\nCSL-YAMLCSL-JSONBibTeXRIS\n\n\ntype: book\nid: AristOp\nauthor:\n- family: Aristotle\neditor:\n- family: Bekker\n  given: Immanuel\ntitle: Aristotelis opera\nissued:\n  date-parts:\n  - 1831\nnumber-of-volumes: '4'\npublisher: Reimer\npublisher-place: Berlim\n\n\n\n\n\n\nNote about CSL-YAML\n\n\n\n\n\nCSL-YAML is a YAML representation of the CSL schema used internally by Pandoc. This means there is strict correspondence between field names and the fields we can call upon using the Cite Field filter. Other formats such as BibTeX or RIS will have slighly different names, but regardless, we must use the CSL field names. Some bibliography managers, such as Zotero with the BetterBibTeX plugin, can export CSL-YAML files. Others will have to convert their native format to CSL-YAML.\n\n\n\n\n\n{\n    \"author\": [\n      {\n        \"family\": \"Aristotle\"\n      }\n    ],\n    \"editor\": [\n      {\n        \"family\": \"Bekker\",\n        \"given\": \"Immanuel\"\n      }\n    ],\n    \"id\": \"AristOp\",\n    \"issued\": {\n      \"date-parts\": [\n        [\n          1831\n        ]\n      ]\n    },\n    \"number-of-volumes\": \"4\",\n    \"publisher\": \"Reimer\",\n    \"publisher-place\": \"Berlim\",\n    \"title\": \"Aristotelis opera\",\n    \"type\": \"book\"\n  }\n\n\n@book{AristOp,\n  author = {Aristotle},\n  editor = {Bekker, Immanuel},\n  title = {Aristotelis opera},\n  publisher = {Reimer},\n  publisher-place = {Berlim},\n  number-of-volumes = {4},\n  issued = {1831}\n}\n\n\nTY  - BOOK\nID  - AristOp\nAU  - Aristotle\nED  - Bekker, Immanuel\nTI  - Aristotelis opera\nPB  - Reimer\nCY  - Berlim\nVL  - 4\nY1  - 1831\nER  -\n\n\n\nFor example, the following snippet:\n\nThe works of [@AristOp]{.author} were first edited by [@AristOp]{.editor} in [@AristOp]{.issued}.\n\nWill render as:\n\nThe works of Aristotle were first edited by Bekker in 1831.\n\n\n\n\n\n\nPrimary Sources\n\n\n\nAristotle. 1831. Aristotelis Opera. Edited by Immanuel Bekker. 4 vols. Berlim: Reimer. [1, 2, 3]\n\n\nSecondary Sources\n\n\n\n\n\n\nFootnotes\n\n\nIn fact, we can get any field from the reference, as long as it is defined in the CSL schema. These include: abstract accessed annote archive archive_collection archive_location archive-place author authority available-date call-number chair chapter-number citation-key citation-label citation-number collection-editor collection-number collection-title compiler composer container-author container-title container-title-short contributor curator dimensions director division DOI edition editor editor-translator editorial-director event event-date event-place event-title executive-producer first-reference-note-number genre guest host illustrator interviewer ISBN ISSN issue issued jurisdiction keyword language license locator medium narrator note notes number number-of-pages number-of-volumes organizer original-author original-date original-publisher original-publisher-place original-title page page-first part-number part-title performer PMCID PMID printing-number producer publisher publisher-place recipient references reviewed-author reviewed-genre reviewed-title scale script-writer section series-creator source status submitted supplement-number title title-short translator URL version volume volume-title year-suffix↩︎"
  },
  {
    "objectID": "docs/citetools/Citation-Backlinks/index.html",
    "href": "docs/citetools/Citation-Backlinks/index.html",
    "title": "Citation Backlinks",
    "section": "",
    "text": "The need to turn the bibliography into a linked index of cited references, with links from the entries back to each of its multiple occurences in the body of the text (e.g. in PDF/DOCX: [p. 1, p. 4, p. 10], in HTML: [1, 2, 3]) (and with the ability to turn these off globally or in an ad hoc fashion).\n\n\nOptionally, the need to split the bibliography into sections, printing the bibliography for each chapter/section/part. (For this, you must uncomment the apropriate line in the _extension.yaml file.)"
  },
  {
    "objectID": "docs/citetools/Multiple-Bibliographies/3-Advanced/1-Using-Multiple-Bibliographies-in-Scrivener.html",
    "href": "docs/citetools/Multiple-Bibliographies/3-Advanced/1-Using-Multiple-Bibliographies-in-Scrivener.html",
    "title": "Multiple Bibliographies in Scrivener",
    "section": "",
    "text": "In Scrivener, you can add multiple bibliographies to your project using the strategy below. Once this is done, the only task to add new bibliography files to your project will be to paste the path to one of the files in the metadata of your document. This is a very simple task, and it can be done in a few seconds.\n\n\nFirst of all, create a new meta data field called path.\nCreate a Section Type called Multibib.\nCreate a new Section in your project, and set its Section Type to Multibib.\nPaste the path to the bibliography file in the path metadata field.\nIn the Compile formats Section Layout, add the following code to the Title Sufix of the Multibib Section:\n\n {.appendix}\n\n---\nbibliography_multibib<$linkID>: \"<$custom:Path>\"\n---\n\n::: {#refs_multibib<$linkID>}\n:::"
  },
  {
    "objectID": "docs/citetools/Multiple-Bibliographies/index.html",
    "href": "docs/citetools/Multiple-Bibliographies/index.html",
    "title": "Multiple Bibliographies",
    "section": "",
    "text": "In this section, we will discuss how to use multiple bibliographies in your document. In many fields, this is conditio sine qua non for academic writing and publishing. In the humanities, for example, it is common to have a bibliography for primary sources and another for secondary sources. In philosophy, sometimes they can be very nuanced with sections dedicated to original sources, translations, commentaries, and so on."
  },
  {
    "objectID": "docs/citetools/Multiple-Bibliographies/index.html#installation",
    "href": "docs/citetools/Multiple-Bibliographies/index.html#installation",
    "title": "Multiple Bibliographies",
    "section": "Installation",
    "text": "Installation\nThis extension is available on Github and can be installed using the following command:\nquarto install extension cite-tools"
  },
  {
    "objectID": "docs/citetools/Multiple-Bibliographies/2-How-to-set-it-up.html",
    "href": "docs/citetools/Multiple-Bibliographies/2-How-to-set-it-up.html",
    "title": "How to set it up",
    "section": "",
    "text": "Add bibliography files to the refs folder. Then, add the following metadata to the YAML header of your document in this way:\n---\nbibliography_primary: refs/primary.json\nbibliography_secondary: refs/secondary.json\n---\nThe path should be relative to the project’s root folder. The name of the bibliography should (but doesn’t have to) be the same as the name of the file, without the extension.\nThen, place the bibliographies placeholders in the document where you want the bibliographies to appear.\n# Primary Sources\n\n::: {#refs_primary}\n:::\n\n# Secondary Sources\n\n::: {#refs_secondary}\n:::\nEach refs_bib_name div should have a matching entry bibliography_bib_name in the metadata. They will be filled with the citations from the respective bibliography files.\nMake sure the bibliography name (bibliography_) and the placeholder div id (refs_) match, otherwise nothing will print.1\n\n\n\n\nFootnotes\n\n\nThat is, if you have a bibliography named bibliography_primary, the placeholder div should be refs-primary or refs_primary.↩︎"
  },
  {
    "objectID": "docs/citetools/Multiple-Bibliographies/1-Prime-Matter.html",
    "href": "docs/citetools/Multiple-Bibliographies/1-Prime-Matter.html",
    "title": "Prime Matter",
    "section": "",
    "text": "First of all, you will need to be able to provide a bibliography file in one of different possible formats. The most common ones are called BibLaTeX or BibTeX. However, you can also use CSL-JSON files, which is preferable since the latter faster and it is the format used by Citeproc internally to represent bibliographies.\nThere are many ways to provide a bibliography file. The most common ones are:\n\nKeeping a bibliography file yourself and updating it manually. (Viable only it small projects.)\nUsing a bibliography manager, such as Zotero, JabRef, Bookends, Bibdesk, Endnote; see also this comparison on Wikipedia. These programs allows you to edit your bibliography and export it in the desired format.\nUsing a shared bibliography on Github or a shared Zotero online library1.\n\nThe important detail here is that you need to be able to export your bibliography in one of the formats mentioned above and that you need to be able to create more than one bibliography file. Once you have this, you can proceed to the next step.\n\n\n\n\n\n\nrefs/primary.bib\n\n\n\nKeeping bibliography files inside /refs at the project’s root folder is not a requirement, but it is good pratice.\n\n\n\n\n\n\n\n\nCite Tools, not a bibliography manager\n\n\n\nThis extension is not a bibliography manager. It does not allow you to edit your bibliography. It only allows you to use multiple bibliographies in your document.\n\n\n\n\n\n\nFootnotes\n\n\nZotero online libraries can be downloaded using https://api.zotero.org/groups/LibraryIDhere/items?format=bibtex&limit=150) where LibraryIDhere should be replaced by the 7-digit code in the middle of the library URL↩︎"
  },
  {
    "objectID": "docs/About/index.html",
    "href": "docs/About/index.html",
    "title": "About",
    "section": "",
    "text": "Logo image generated Dall-E using Enso-like round black and white painting with ancient greek war-ship with man tied to the mast as prompt."
  },
  {
    "objectID": "docs/About/index.html#license",
    "href": "docs/About/index.html#license",
    "title": "About",
    "section": "License",
    "text": "License\nFilters published under the MIT license by Albert Krewinkel (tarleb).\n\nmultibib\nmultiple-bibliographies\ncitation-backlinks\nsection-bibliographies\n\nFilters published under the MIT license by Albert Krewinkel (tarleb) & Bernardo Vasconcelos (bcdavasconcelos).\n\ncitefield\n\nAll Pandoc Lua filters in this extension are published under the MIT license, see file LICENSE for details.\nBack to top"
  },
  {
    "objectID": "docs/About/About.html",
    "href": "docs/About/About.html",
    "title": "About",
    "section": "",
    "text": "Logo image generated Dall-E using Enso-like round black and white painting with ancient greek war-ship with man tied to the mast as prompt."
  },
  {
    "objectID": "docs/About/About.html#license",
    "href": "docs/About/About.html#license",
    "title": "About",
    "section": "License",
    "text": "License\nFilters published under the MIT license by Albert Krewinkel (tarleb).\n\nmultibib\nmultiple-bibliographies\ncitation-backlinks\nsection-bibliographies\n\nFilters published under the MIT license by Albert Krewinkel (tarleb) & Bernardo Vasconcelos (bcdavasconcelos).\n\ncitefield\n\nAll Pandoc Lua filters in this extension are published under the MIT license, see file LICENSE for details.\nBack to top"
  },
  {
    "objectID": "docs/About/1-About-Cite-Tools.html",
    "href": "docs/About/1-About-Cite-Tools.html",
    "title": "About Cite Tools",
    "section": "",
    "text": "Logo image generated Dall-E using Enso-like round black and white painting with ancient greek war-ship with man tied to the mast as prompt."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Cite Tools",
    "section": "",
    "text": "The vanilla Pandoc and Quarto’s Citeproc environment is powerful and its syntax is simple. It uses [@Citekey] for Author (Date) and [-@Citekey] for (Date).1\n\n\n\n\n\n\nThe advantage of this markup syntax lies in its simplicity and the compatibility with all formats supported by Pandoc, a universal document converter.\n\n\n\nThis extension introduces advanced bibliography features by bundling up several Lua filters (see below). It allows, among other things, the creation of multiple bibliographies (or bibliographies with multiple sections, such as primary sources and secondary sources), the citation of arbitrary fields from the references, such as author, editor, or translator names and title / original-title of works, and last, but not least, the creation of linked indexes of citations.\n\nMultiple bibliographies\nCite Field\nCitation backlinks\n\n\nLicense\n\n\nCreate multiple bibliographies (or bibliographies with multiple sections, such as primary sources and secondary sources).2\nCite arbitrary fields from the references, such as author, editor, or translator names and title / original-title of works.3\nTurn the bibliography into a linked index of citations.\n\n[[Multiple bibliographies]]\ngenerate a bibliography in all formats supported by Pandoc (which totalize more than 30 formats, including LaTeX, DOCX, HTML, EPUB, PDF, and so on)\nbut it lacks some features that are common in other bibliography typesetting mechanisms, such as BibLaTeX and BibTeX. This extension aims to fill these gaps using only Lua Filters.\n\n\nMore specifically, this bunddle seeks to address in the simplest of ways possible the following demands:\n1. Multiple bibliographies\nThe need for multiple bibliographies (or bibliographies with multiple sections, such as primary sources and secondary sources).\n\n\n\n\nUsers of Quarto can install this extension with the following command\nquarto install extension bcdavasconcelos/citetools\nand use it by adding citetools to the filters entry in their YAML header.\n---\nfilters:\n  - citetools\n---\n\n\n\nlink-fields (boolean): Link inlines printed by citefield to their corresponding entry in the bibliography. Default: true.\nlink-citations (boolean): Link citations to their respective reference in the bibliography. Default: true. Note: if link-citations is set to false, link-fields is also set to false.\n\n\nSee sample document sample.qmd for a working example with explanations.\n\n\n\n\n\nFilters published under the MIT license by Albert Krewinkel (tarleb).\n\nmultibib\nmultiple-bibliographies\ncitation-backlinks\nsection-bibliographies\n\nFilters published under the MIT license by Albert Krewinkel (tarleb) & Bernardo Vasconcelos (bcdavasconcelos).\n\ncitefield\n\nAll Pandoc Lua filters in this extension are published under the MIT license, see file LICENSE for details.\nBack to top"
  },
  {
    "objectID": "sample.html",
    "href": "sample.html",
    "title": "Example of Citetools in action",
    "section": "",
    "text": "Introduction\nThis very concise sample ilustrates the use of multiple-bibliographies to separate primary (refs/primary.json) and secondary (refs/secondary.json) sources for the document; the use of citation-backlinks to turn the bibliography into an index of citations with links back to the text; and the use of citefield to print in the body of the text useful information from the bibliographic references.\nOptionally, section-bibliographies can be used to separate the bibliography into sections. For this, you must uncomment the apropriate line in the _extension.yaml file.\n\n\nThe Works of Aristotle\nThis is an example of complex use of bibliographic references. We are relying on the bibliography to print in the text the correct names of the authors, editors, and translators & title of the works.\nThe works of [@AristOp]{.author} were first edited by\n[@AristOp]{.editor} in [@AristOp]{.issued}.\nThe works of Aristotle were first edited by Bekker in 1831.\nLater, the [@DA]{.title} was edited by [@DABiehl1896]{.editor}\nin [@DABiehl1896]{.issued} [repr. in [@DATheiler]{.translator}'s\n[@DATheiler]{.issued} translation]; by [@DAForster]{.editor} in\n[@DAForster]{.issued} [repr. in [@DACorcilius]{.translator}'s\n[@DACorcilius]{.issued} translation]; and by [@DARoss]{.editor}\nin [@DARoss]{.issued}.\nLater, the De anima was edited by Biehl in 1896 [repr. in Seidl’s 1995 translation]; by Förster in 1912 [repr. in Corcilius’s 2017 translation]; and by Ross in 1961.\n\n\n\n\nPrimary Sources\n\n\n\nAristotle. 1831a. Aristotelis Opera. Edited by Immanuel Bekker. 4 vols. Berlim: Reimer. [1, 2]\n\n\n———. 1831b. “De Anima.” In Aristotelis Opera, edited by Immanuel Bekker, 402a01–435b25. Berlim: Reimer. [1]\n\n\n———. 1896. De Anima. Edited by Wilhelm Biehl. Leipzig: Teubner. [1, 2]\n\n\n———. 1912. Aristotelis de Anima Libri III. Edited by Aurél Förster. Budapeste: Hungarian Academy of Sciences. [1, 2]\n\n\n———. 1961. De Anima. Edited by William David Ross. Oxford: Clarendon. [1, 2]\n\n\nSecondary Sources\n\n\n\nAristoteles. 2017. Über Die Seele. De Anima. Translated by Klaus Corcilius. Hamburg: Felix Meiner. [1, 2]\n\n\nAristotelis. 1995. De Anima. Translated by H. Seidl and W. Theiler. Hamburg: Felix Meiner. [1]"
  }
]